# Gateway Registration API - OpenAPI Contract
# This file documents the gateway registration endpoints added to platform-api
#
# UPDATED: October 26, 2025
# Changes: Added new gateway properties (isCritical, isAIGateway, description, vhost, isActive),
# added gateway status endpoint for polling, updated all response schemas to include new fields.

paths:
  /gateways:
    post:
      summary: Register a new gateway
      description: |
        Creates a new gateway within the organization specified in the JWT token.
        Organization ID is automatically extracted from the token and does not need to be provided.
      operationId: createGateway
      tags:
        - Gateways
      security:
        - BearerAuth: []
      requestBody:
        description: Gateway registration details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGatewayRequest'
            example:
              name: "prod-gateway-01"
              displayName: "Production Gateway 01"
      responses:
        '201':
          description: Gateway registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayRegistrationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Gateway name already exists within organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    get:
      summary: List all gateways
      description: |
        Retrieves a list of all registered gateways for the organization specified in the JWT token.
        Organization ID is automatically extracted from the token.
      operationId: listGateways
      tags:
        - Gateways
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Gateways retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /gateways/status:
    get:
      summary: Get gateway status
      description: |
        Retrieves lightweight status information for gateways for frequent polling by management portals.
        Returns only essential fields (id, name, isActive, isCritical) for efficient polling.
        Organization ID is automatically extracted from the JWT token.
      operationId: getGatewayStatus
      tags:
        - Gateway Status
      security:
        - BearerAuth: []
      parameters:
        - name: gatewayId
          in: query
          required: false
          description: Optional gateway UUID to filter to a specific gateway
          schema:
            type: string
            format: uuid
            example: "987e6543-e21b-45d3-a789-426614174999"
      responses:
        '200':
          description: Gateway status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayStatusListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Gateway not found (when gatewayId is specified)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /gateways/{gateway_uuid}:
    get:
      summary: Get gateway by UUID
      description: |
        Retrieves a specific gateway by its UUID. Access is validated against the organization 
        in the JWT token to ensure users can only access gateways in their organization.
      operationId: getGateway
      tags:
        - Gateways
      security:
        - BearerAuth: []
      parameters:
        - name: gateway_uuid
          in: path
          required: true
          description: UUID of the gateway to retrieve
          schema:
            type: string
            format: uuid
            example: "987e6543-e21b-45d3-a789-426614174999"
      responses:
        '200':
          description: Gateway retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Gateway not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: Delete gateway
      description: |
        Deletes a gateway and all associated tokens. Access is validated against the organization 
        in the JWT token.
      operationId: deleteGateway
      tags:
        - Gateways
      security:
        - BearerAuth: []
      parameters:
        - name: gateway_uuid
          in: path
          required: true
          description: UUID of the gateway to delete
          schema:
            type: string
            format: uuid
            example: "987e6543-e21b-45d3-a789-426614174999"
      responses:
        '204':
          description: Gateway deleted successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Gateway not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /gateways/{gateway_uuid}/tokens:
    post:
      summary: Rotate gateway token
      description: |
        Generates a new authentication token for the gateway. The existing token remains active 
        to enable zero-downtime rotation. Access is validated against the organization in the JWT token.
      operationId: rotateGatewayToken
      tags:
        - Gateway Tokens
      security:
        - BearerAuth: []
      parameters:
        - name: gateway_uuid
          in: path
          required: true
          description: UUID of the gateway
          schema:
            type: string
            format: uuid
            example: "987e6543-e21b-45d3-a789-426614174999"
      responses:
        '201':
          description: New token generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRotationResponse'
        '400':
          description: Bad request (e.g., maximum active tokens reached)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Gateway not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /gateways/{gateway_uuid}/tokens/{token_uuid}:
    delete:
      summary: Revoke gateway token
      description: Revokes a specific gateway token. Operation is idempotent - revoking an already-revoked token succeeds.
      operationId: revokeGatewayToken
      tags:
        - Gateway Tokens
      parameters:
        - name: gateway_uuid
          in: path
          required: true
          description: UUID of the gateway
          schema:
            type: string
            format: uuid
            example: "987e6543-e21b-45d3-a789-426614174999"
        - name: token_uuid
          in: path
          required: true
          description: UUID of the token to revoke
          schema:
            type: string
            format: uuid
            example: "abc12345-f678-90de-f123-456789abcdef"
      responses:
        '200':
          description: Token revoked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Token revoked successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Gateway or token not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT access token issued by Thunder STS. The token must contain an `organization` claim 
        that identifies the user's organization. All API operations are automatically scoped 
        to this organization.

  schemas:
    CreateGatewayRequest:
      description: |
        Request body for creating a gateway. Organization ID is automatically extracted 
        from the JWT token and does not need to be provided.
      type: object
      required:
        - name
        - displayName
        - vhost
        - isCritical
        - isAIGateway
      properties:
        name:
          type: string
          pattern: '^[a-z0-9-]+$'
          minLength: 3
          maxLength: 64
          description: URL-friendly gateway identifier (lowercase alphanumeric with hyphens, unique per organization)
          example: "prod-gateway-01"
        displayName:
          type: string
          minLength: 1
          maxLength: 128
          description: Human-readable gateway name
          example: "Production Gateway 01"
        description:
          type: string
          maxLength: 500
          description: Optional gateway description
          example: "Primary production gateway for API traffic"
        vhost:
          type: string
          minLength: 1
          maxLength: 253
          description: Virtual host for the gateway
          example: "api.example.com"
        isCritical:
          type: boolean
          description: Indicates if the gateway is critical for operations
          example: true
        isAIGateway:
          type: boolean
          description: Indicates if this is an AI gateway
          example: false

    GatewayResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          description: Unique identifier for the gateway
          example: "987e6543-e21b-45d3-a789-426614174999"
        organizationId:
          type: string
          format: uuid
          description: UUID of the organization this gateway belongs to
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          description: URL-friendly gateway identifier
          example: "prod-gateway-01"
        displayName:
          type: string
          description: Human-readable gateway name
          example: "Production Gateway 01"
        description:
          type: string
          description: Gateway description
          example: "Primary production gateway for API traffic"
        vhost:
          type: string
          description: Virtual host for the gateway
          example: "api.example.com"
        isCritical:
          type: boolean
          description: Indicates if the gateway is critical for operations
          example: true
        isAIGateway:
          type: boolean
          description: Indicates if this is an AI gateway
          example: false
        isActive:
          type: boolean
          description: Indicates if the gateway is currently connected to the platform via WebSocket
          example: true
        createdAt:
          type: string
          format: date-time
          description: Timestamp when gateway was registered
          example: "2025-10-26T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when gateway was last updated
          example: "2025-10-26T10:30:00Z"

    GatewayListResponse:
      type: object
      required:
        - count
        - list
        - pagination
      properties:
        count:
          type: integer
          description: Number of items in current response
          example: 2
        list:
          type: array
          items:
            $ref: '#/components/schemas/GatewayResponse'
        pagination:
          type: object
          required:
            - total
            - offset
            - limit
          properties:
            total:
              type: integer
              description: Total number of items available across all pages
              example: 10
            offset:
              type: integer
              description: Zero-based index of first item in current response
              example: 0
            limit:
              type: integer
              description: Maximum number of items returned per page
              example: 10

    GatewayRegistrationResponse:
      type: object
      properties:
        gateway:
          $ref: '#/components/schemas/GatewayResponse'
        token:
          type: string
          description: Plain-text authentication token (only exposed once during registration)
          example: "kR3mF9pL2vX8qN5wY7jK4sT1hU6gB0cD9aE8fI2mN5oP7qR3sT6uV9xY2zA5bC8e"

    TokenRotationResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID of the newly generated token
          example: "def45678-g901-23hi-j456-789012klmnop"
        token:
          type: string
          description: Plain-text new authentication token (only exposed once during rotation)
          example: "nM8pQ1rT4vW7yZ0bC3eF6hI9kL2nO5qR8tU1wX4zA7cE0fH3jK6mP9sV2yB5dG8i"
        createdAt:
          type: string
          format: date-time
          description: Timestamp when new token was created
          example: "2025-10-15T14:20:00Z"
        message:
          type: string
          description: Informational message about token rotation
          example: "New token generated successfully. Old token remains active until revoked."

    TokenInfoResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          description: Token UUID
          example: "abc12345-f678-90de-f123-456789abcdef"
        status:
          type: string
          enum: [active, revoked]
          description: Current token status
          example: "active"
        createdAt:
          type: string
          format: date-time
          description: Timestamp when token was created
          example: "2025-10-14T10:30:00Z"
        revokedAt:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when token was revoked (null if active)
          example: null

    GatewayStatusResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the gateway
          example: "987e6543-e21b-45d3-a789-426614174999"
        name:
          type: string
          description: URL-friendly gateway identifier
          example: "prod-gateway-01"
        isActive:
          type: boolean
          description: Indicates if the gateway is currently connected to the platform via WebSocket
          example: true
        isCritical:
          type: boolean
          description: Indicates if the gateway is critical for operations
          example: true

    GatewayStatusListResponse:
      type: object
      required:
        - count
        - list
        - pagination
      properties:
        count:
          type: integer
          description: Number of items in current response
          example: 2
        list:
          type: array
          items:
            $ref: '#/components/schemas/GatewayStatusResponse'
        pagination:
          type: object
          required:
            - total
            - offset
            - limit
          properties:
            total:
              type: integer
              description: Total number of items available across all pages
              example: 2
            offset:
              type: integer
              description: Zero-based index of first item in current response
              example: 0
            limit:
              type: integer
              description: Maximum number of items returned per page
              example: 2

    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          description: HTTP status code
          example: 400
        message:
          type: string
          description: Error message summary
          example: "Bad Request"
        description:
          type: string
          description: Detailed error description
          example: "Gateway name is required"

  responses:
    BadRequest:
      description: Bad request - validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            code: 400
            message: "Bad Request"
            description: "Gateway name must be lowercase alphanumeric with hyphens only"

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            code: 500
            message: "Internal Server Error"
            description: "An unexpected error occurred"

    Unauthorized:
      description: Unauthorized. Authentication credentials are missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            code: 401
            message: Unauthorized
            description: Authorization header is required or token is invalid

