openapi: 3.1.1
info:
  title: WSO2 API Platform - Platform API
  description: This document specifies a **RESTful API** for WSO2 **API Platform** - **Platform API**.
  version: 1.0.0
  contact:
    name: WSO2
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: https://localhost:8443/api/v1
    description: Development server (HTTPS)
  - url: https://api.platform.com/api/v1
    description: Production server

paths:
  /organizations:
    post:
      summary: Create a new organization
      description: Creates a new organization with a unique handle
      operationId: createOrganization
      tags:
        - Organizations
      requestBody:
        description: Organization that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '201':
          description: Organization created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
            $ref: '#/components/responses/Conflict'
        '500':
            $ref: '#/components/responses/InternalServerError'

  /organizations/{org_uuid}:
    get:
      summary: Get organization by UUID
      description: Retrieves a specific organization by its UUID
      operationId: getOrganization
      tags:
        - Organizations
      parameters:
        - name: org_uuid
          in: path
          required: true
          description: UUID of the organization to retrieve
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Organization retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /organizations/{org_uuid}/projects:
    get:
      summary: Get all projects for an organization
      description: Retrieves all projects belonging to a specific organization
      operationId: getProjectsByOrganization
      tags:
        - Projects
      parameters:
        - name: org_uuid
          in: path
          required: true
          description: UUID of the organization
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Projects retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /projects:
    post:
      description: Creates a new project within an organization
      operationId: createProject
      tags:
        - Projects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '201':
          description: Project created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /projects/{uuid}:
    get:
      summary: Get project by UUID
      description: Retrieves a specific project by its UUID
      operationId: getProject
      tags:
        - Projects
      parameters:
        - name: uuid
          in: path
          required: true
          description: UUID of the project to retrieve
          schema:
            type: string
            example: "yr434567-de34-76uj6-w376-234324532"
      responses:
        '200':
          description: Project retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      summary: Update project
      description: Updates an existing project's name and/or default status
      operationId: updateProject
      tags:
        - Projects
      parameters:
        - name: uuid
          in: path
          required: true
          description: UUID of the project to update
          schema:
            type: string
            example: "yr434567-de34-76uj6-w376-234324532"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Project updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: Delete project
      description: Deletes a specific project by its UUID
      operationId: deleteProject
      tags:
        - Projects
      parameters:
        - name: uuid
          in: path
          required: true
          description: UUID of the project to delete
          schema:
            type: string
            example: "yr434567-de34-76uj6-w376-234324532"
      responses:
        '204':
          description: Project deleted successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    Organization:
      type: object
      required:
        - handle
      properties:
        uuid:
          type: string
          format: uuid
          description: Unique identifier for the organization
          example: "123e4567-e89b-12d3-a456-426614174000"
        handle:
          type: string
          description: URL-friendly unique handle for the organization
          pattern: '^[a-z0-9-]+$'
          minLength: 1
          example: "wso2"
        name:
          type: string
          description: Display name of the organization
          example: "WSO2"
        created_at:
          type: string
          format: date-time
          description: Timestamp when the organization was created
          example: "2023-10-12T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the organization was last updated
          example: "2023-10-12T10:30:00Z"

    Project:
      type: object
      required:
        - name
        - organization_id
      properties:
        uuid:
          type: string
          description: Unique identifier for the project
          example: "yr434567-de34-76uj6-w376-234324532"
        name:
          type: string
          description: Name of the project
          minLength: 1
          example: "Default Project"
        organization_id:
          type: string
          format: uuid
          description: UUID of the organization this project belongs to
          example: "123e4567-e89b-12d3-a456-426614174000"
        is_default:
          type: boolean
          description: Whether this is the default project for the organization
          example: false
        created_at:
          type: string
          format: date-time
          description: Timestamp when the project was created
          example: "2023-10-12T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the project was last updated
          example: "2023-10-12T10:30:00Z"

    Error:
      title: Error object returned
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
          description: Error message
        description:
          type: string
          description: A detailed description about the error message

  responses:
    BadRequest:
      description: Bad Request. Invalid request or validation error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Bad Request
            description: Invalid request or validation error
    NotFound:
      description: Not Found. The specified resource does not exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not Found
            description: The specified resource does not exist
    Conflict:
      description: Conflict. Specified resource already exists.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 409
            message: Conflict
            description: Specified resource already exists
    InternalServerError:
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 500
            message: Internal Server Error
            description: The server encountered an internal error. Please contact
              administrator.
  parameters:
    OrganizationUUID:
      name: org_uuid
      in: path
      required: true
      description: UUID of the organization
      schema:
        type: string
        format: uuid
        example: "123e4567-e89b-12d3-a456-426614174000"

    ProjectID:
      name: uuid
      in: path
      required: true
      description: UUID of the project
      schema:
        type: string
        example: "yr434567-de34-76uj6-w376-234324532"

tags:
  - name: Health
    description: Health check endpoints
  - name: Organizations
    description: Organization management operations
  - name: Projects
    description: Project management operations
